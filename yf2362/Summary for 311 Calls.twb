<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0114.0856                                -->
<workbook source-platform='win' version='9.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Summaryfor311Calls' path='/workbooks' revision='1.9' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Aggregated_Data_311_withZIP' inline='true' name='textscan.1a4rjgw1usk7811258tz000k62ek' version='9.2'>
      <connection class='textscan' directory='C:/Users/hongzhili/Desktop/W4701Project/yf2362' filename='Aggregated_Data_311_withZIP.csv' password='' server='' username=''>
        <relation name='Aggregated_Data_311_withZIP#csv' table='[Aggregated_Data_311_withZIP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Agency' ordinal='2' />
            <column datatype='string' name='Complaint.Type' ordinal='3' />
            <column datatype='integer' name='Incident.Zip' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='string' name='Month' ordinal='6' />
            <column datatype='integer' name='Hour' ordinal='7' />
            <column datatype='string' name='DayOfWeek' ordinal='8' />
            <column datatype='integer' name='Counts' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Agency]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Agency</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complaint.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Complaint.Type]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Complaint.Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident.Zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incident.Zip]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Incident.Zip</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Counts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Counts]</local-name>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias>Counts</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Aggregated_Data_311_withZIP#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
      <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
      </column>
      <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
      </column>
      <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Month]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1622421769247903744]' derivation='None' name='[none:Calculation_1622421769247903744:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1622421769249316865]' derivation='None' name='[none:Calculation_1622421769249316865:nk]' pivot='key' type='nominal' />
      <column-instance column='[DayOfWeek]' derivation='None' name='[none:DayOfWeek:nk]' pivot='key' type='nominal' />
      <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Agency)' hidden='true' name='[Action (Agency)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Agency]' />
        </groupfilter>
      </group>
      <group caption='Action (DAY(Date),Year)' hidden='true' name='[Action (DAY(Date),Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date:ok]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Hour) 1' hidden='true' name='[Action (Hour) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Hour:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Hour)' hidden='true' name='[Action (Hour)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Hour]' />
        </groupfilter>
      </group>
      <group caption='Action (Incident.Zip)' hidden='true' name='[Action (Incident.Zip)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Incident.Zip]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,Month)' hidden='true' name='[Action (Season,Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
          <groupfilter function='level-members' level='[Month]' />
        </groupfilter>
      </group>
      <group caption='Action (Weekday_Weekend,Day Of Week)' hidden='true' name='[Action (Weekday_Weekend,Day Of Week)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
          <groupfilter function='level-members' level='[DayOfWeek]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\hongzhili\Desktop\W4701Project\yf2362\Aggregated_Data_311_withZIP.tde' schema='Extract' tablename='Extract' update-time='05/02/2016 06:24:48 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1622421769247903744]' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            <calculation column='[Calculation_1622421769249316865]' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='195917' timestamp-start='2016-05-02 06:24:48.410' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Agency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Agency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agency</remote-alias>
              <ordinal>0</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;DCA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;NYPD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Complaint.Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Complaint.Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Complaint.Type</remote-alias>
              <ordinal>1</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Animal Abuse&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vector&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Counts</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Counts]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Counts</remote-alias>
              <ordinal>2</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>40</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2280</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2010-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-03-29#</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-06-08#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayOfWeek</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DayOfWeek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayOfWeek</remote-alias>
              <ordinal>4</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Friday&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wednesday&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>5</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>195917</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>19191833403.0</statistic>
                <statistic aggregation='Avg' datatype='real'>97959.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>195917</statistic>
                <statistic aggregation='Stdev' datatype='real'>56556.510681795073</statistic>
                <statistic aggregation='StdevP' datatype='real'>56556.366343675232</statistic>
                <statistic aggregation='Var' datatype='real'>3198638900.5000005</statistic>
                <statistic aggregation='VarP' datatype='real'>3198622574.0000005</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2506677347154835.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hour</remote-alias>
              <ordinal>6</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident.Zip</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Incident.Zip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident.Zip</remote-alias>
              <ordinal>7</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>12222</statistic>
                <statistic aggregation='Count' datatype='integer'>192498</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>8</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Apr&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sep&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>10</ordinal>
              <family>Aggregated_Data_311_withZIP#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2010</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
                <statistic aggregation='Median' datatype='integer'>2014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1622421769247903744</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1622421769247903744]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1622421769247903744</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>6</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fall&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Winter&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>24</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1622421769249316865</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1622421769249316865]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1622421769249316865</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>7</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Weekday&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Weekend&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>195917</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>28</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.554293' measure-ordering='alphabetic' measure-percentage='0.445707' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Month:nk]' type='palette'>
            <map to='#55aa00'>
              <bucket>&quot;Apr&quot;</bucket>
            </map>
            <map to='#55aa00'>
              <bucket>&quot;Feb&quot;</bucket>
            </map>
            <map to='#55aa00'>
              <bucket>&quot;Mar&quot;</bucket>
            </map>
            <map to='#55aaff'>
              <bucket>&quot;Jul&quot;</bucket>
            </map>
            <map to='#55aaff'>
              <bucket>&quot;Jun&quot;</bucket>
            </map>
            <map to='#55aaff'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#aaaaff'>
              <bucket>&quot;Dec&quot;</bucket>
            </map>
            <map to='#aaaaff'>
              <bucket>&quot;Jan&quot;</bucket>
            </map>
            <map to='#aaaaff'>
              <bucket>&quot;Nov&quot;</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>&quot;Aug&quot;</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>&quot;Oct&quot;</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>&quot;Sep&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:DayOfWeek:nk]' type='palette'>
            <map to='#1c5998'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#1c73b1'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
            <map to='#3a87b7'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#67add4'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
            <map to='#7bc8e2'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Year:ok]' type='palette'>
            <map to='#1f83b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#4aa236'>
              <bucket>2011</bucket>
            </map>
            <map to='#6f63bb'>
              <bucket>2015</bucket>
            </map>
            <map to='#bf48aa'>
              <bucket>2014</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2016</bucket>
            </map>
            <map to='#f1be46'>
              <bucket>2012</bucket>
            </map>
            <map to='#f67116'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:ok]' type='palette'>
            <map to='#1f83b4'>
              <bucket>2010</bucket>
            </map>
            <map to='#4aa236'>
              <bucket>2011</bucket>
            </map>
            <map to='#6f63bb'>
              <bucket>2015</bucket>
            </map>
            <map to='#bf48aa'>
              <bucket>2014</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2016</bucket>
            </map>
            <map to='#f1be46'>
              <bucket>2012</bucket>
            </map>
            <map to='#f67116'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1622421769249316865:nk]' type='palette'>
            <map to='#ac613c'>
              <bucket>&quot;Weekend&quot;</bucket>
            </map>
            <map to='#ddcb70'>
              <bucket>&quot;Weekday&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1622421769247903744:nk]' type='palette'>
            <map to='#55aaff'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#b4b19b'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#ccc94d'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Fall&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='textscan.1a4rjgw1usk7811258tz000k62ek'>
      <datasources>
        <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
      </datasources>
      <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
        <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
        <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
        <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
        <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]'>
        <groupfilter function='level-members' level='[none:Agency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]'>
        <groupfilter function='level-members' level='[none:Complaint.Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Annual Cnt' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Hour of a Day' />
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Monthly' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Hour of a Day' />
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Day of Week' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Hour of a Day' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Daily' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Zip' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Summary' type='sheet' worksheet='Top 20 Agency' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Summary' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual Cnt'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Annual 311 Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]'>
            <groupfilter function='level-members' level='[Agency]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]'>
            <groupfilter function='level-members' level='[Hour]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]'>
            <groupfilter function='level-members' level='[Incident.Zip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
              <groupfilter function='level-members' level='[Month]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
              <groupfilter function='level-members' level='[DayOfWeek]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='true' />
            <format attr='height' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Year:ok]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1a4rjgw1usk7811258tz000k62ek].[attr:Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Daily'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily 311 Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]'>
            <groupfilter function='level-members' level='[Agency]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]'>
            <groupfilter function='level-members' level='[Hour]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]'>
            <groupfilter function='level-members' level='[Incident.Zip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
              <groupfilter function='level-members' level='[Month]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
              <groupfilter function='level-members' level='[DayOfWeek]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='true' />
            <format attr='height' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]' value='-90' />
            <format attr='text-format' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]' value='*mmm, yyyy' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Day of Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Day of Week 311 Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1622421769249316865]' derivation='None' name='[none:Calculation_1622421769249316865:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[DayOfWeek]' derivation='None' name='[none:DayOfWeek:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]'>
            <groupfilter function='level-members' level='[Agency]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]'>
            <groupfilter function='level-members' level='[Hour]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]'>
            <groupfilter function='level-members' level='[Incident.Zip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
              <groupfilter function='level-members' level='[Month]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='true' />
            <format attr='height' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:DayOfWeek:nk]' value='34' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]' value='80' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:DayOfWeek:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hour of a Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>24 Hour 311 Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]'>
            <groupfilter function='level-members' level='[Agency]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]'>
            <groupfilter function='level-members' level='[Incident.Zip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
              <groupfilter function='level-members' level='[Month]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
              <groupfilter function='level-members' level='[DayOfWeek]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Hour:ok]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Hour:ok]' direction='ASC' />
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Hour:ok]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-color' value='#404b73' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Hour:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly 311 Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1622421769247903744]' derivation='None' name='[none:Calculation_1622421769247903744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]'>
            <groupfilter function='level-members' level='[Agency]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]'>
            <groupfilter function='level-members' level='[Hour]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]'>
            <groupfilter function='level-members' level='[Incident.Zip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
              <groupfilter function='level-members' level='[DayOfWeek]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Month:nk]' value='29' />
            <format attr='title' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]' value='70' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Month:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 20 Agency'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Agency by Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]'>
            <groupfilter function='level-members' level='[Incident.Zip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
              <groupfilter function='level-members' level='[Month]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
              <groupfilter function='level-members' level='[DayOfWeek]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]' direction='DESC' using='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' />
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Incident.Zip)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]' value='45' />
            <format attr='width' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='minwidth' value='1260' />
                <format attr='maxwidth' value='1260' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Zip'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The 311 Counts in the NYC Area by ZIP Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
            <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[Calculation_1622421769247903744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Month]=&apos;Jan&apos; OR [Month]=&apos;Feb&apos; OR [Month]=&apos;Dec&apos; THEN &apos;Winter&apos;&#13;&#10;ELSEIF [Month] = &apos;May&apos; OR [Month]=&apos;Apr&apos; OR [Month]=&apos;Mar&apos; THEN &apos;Spring&apos;&#13;&#10;ELSEIF [Month] = &apos;Jun&apos; OR [Month]=&apos;Jul&apos; OR [Month]=&apos;Aug&apos; THEN &apos;Summer&apos;&#13;&#10;ELSE &apos;Fall&apos;&#13;&#10;END' />
            </column>
            <column caption='Weekday_Weekend' datatype='string' name='[Calculation_1622421769249316865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [DayOfWeek] = &apos;Saturday&apos; OR [DayOfWeek]=&apos;Sunday&apos; THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Counts]' role='measure' type='quantitative' />
            <column datatype='date' default-format='S' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[DayOfWeek]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Hour]' role='dimension' type='quantitative' />
            <column datatype='integer' default-format='*00000' name='[Incident.Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='n0;-0' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Incident.Zip]' derivation='None' name='[none:Incident.Zip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Counts]' derivation='Sum' name='[sum:Counts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]'>
            <groupfilter function='level-members' level='[Agency]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Date:ok]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]'>
            <groupfilter function='level-members' level='[none:Hour:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]'>
            <groupfilter function='level-members' level='[Hour]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769247903744]' />
              <groupfilter function='level-members' level='[Month]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1622421769249316865]' />
              <groupfilter function='level-members' level='[DayOfWeek]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Incident.Zip:ok]'>
            <groupfilter from='0' function='range' level='[none:Incident.Zip:ok]' to='6462430478' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Incident.Zip:ok]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Season,Month)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Weekday_Weekend,Day Of Week)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (DAY(Date),Year)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Hour) 1]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[Action (Agency)]</column>
            <column>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[Longitude (generated)]' field-type='quantitative' max='-8200479.7421038402' min='-8266534.8482709909' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[Latitude (generated)]' field-type='quantitative' max='4996233.2647459656' min='4942827.0086959302' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' palette='area-brown' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d7d7d7' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Incident.Zip:ok]' />
              <color column='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' />
              <geometry column='[textscan.1a4rjgw1usk7811258tz000k62ek].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1a4rjgw1usk7811258tz000k62ek].[Latitude (generated)]</rows>
        <cols>[textscan.1a4rjgw1usk7811258tz000k62ek].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Summary'>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_24' value='#d7d7d7' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <datasources>
        <datasource caption='Aggregated_Data_311_withZIP' name='textscan.1a4rjgw1usk7811258tz000k62ek' />
      </datasources>
      <datasource-dependencies datasource='textscan.1a4rjgw1usk7811258tz000k62ek'>
        <column datatype='string' name='[Agency]' role='dimension' type='nominal' />
        <column datatype='string' name='[Complaint.Type]' role='dimension' type='nominal' />
        <column-instance column='[Agency]' derivation='None' name='[none:Agency:nk]' pivot='key' type='nominal' />
        <column-instance column='[Complaint.Type]' derivation='None' name='[none:Complaint.Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='26' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='23' param='horz' type='layout-flow' w='99500' x='0' y='0'>
              <zone h='100000' id='21' type='layout-basic' w='99500' x='0' y='0'>
                <zone h='94125' id='5' param='horz' type='layout-flow' w='99500' x='0' y='5875'>
                  <zone h='94125' id='3' type='layout-basic' w='99500' x='0' y='5875'>
                    <zone h='44125' id='1' name='Zip' show-title='true' w='46753' x='52747' y='5875' />
                    <zone h='21875' id='7' name='Annual Cnt' show-title='true' w='52747' x='0' y='5875' />
                    <zone h='22250' id='9' name='Monthly' show-title='true' w='52747' x='0' y='27750' />
                    <zone h='23125' id='15' name='Hour of a Day' show-title='true' w='55625' x='0' y='76875' />
                    <zone h='26875' id='20' name='Top 20 Agency' show-title='true' w='31069' x='68431' y='50000' />
                    <zone h='26875' id='16' name='Daily' show-title='true' w='68431' x='0' y='50000' />
                    <zone h='23125' id='13' name='Day of Week' show-title='true' w='43875' x='55625' y='76875' />
                  </zone>
                </zone>
                <zone forceUpdate='true' h='5875' id='18' type='text' w='66534' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>Summary - Animal-Related 311 Cases in NYC</run>
                  </formatted-text>
                </zone>
                <zone h='5875' id='19' mode='checkdropdown' name='Zip' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]' type='filter' values='relevant' w='16483' x='66534' y='0' />
                <zone h='5875' id='27' mode='checkdropdown' name='Zip' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]' type='filter' values='relevant' w='16483' x='83017' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='4167' id='10' leg-item-layout='horz' name='Monthly' pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]' type='color' w='35375' x='19500' y='28833' />
        <zone h='6167' id='14' name='Day of Week' pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]' type='color' w='22500' x='79375' y='78000' />
        <zone h='5500' id='6' name='Zip' pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' type='color' w='10250' x='88625' y='42167' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='Zip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[sum:Counts:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</field>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Complaint.Type:nk]</field>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Incident.Zip:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Annual Cnt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[attr:Year:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[attr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Daily'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Year:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Year:ok]</field>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Monthly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day of Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hour of a Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Hour:ok]</field>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Hour:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 20 Agency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Agency:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Summary'>
      <viewpoints>
        <viewpoint name='Annual Cnt'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Daily'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Year:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Day of Week'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769249316865:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Hour of a Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1a4rjgw1usk7811258tz000k62ek].[none:Calculation_1622421769247903744:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 20 Agency'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Zip'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Zip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annual Cnt' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAJzElEQVR4nO3d61NUhxnH8e/ZG7vssrDLIoLYiKiAtygxETN1bExN04tpk3RMp+3/07ft
      35HMxL7qtNNopxivifECKIooCN4Ad1kuezl76QvTF744dsZZNl2e3+cV7M4yz4vzhXOWfeY4
      1Wq1iohBjuM4vh96CJEfkgIQ0wK1+CGLi4v4fGpJGk9NAvD5fCQSiVr8KJG60q9tMU0BiGkK
      QExTAGKaAhDTFICYpgDENAUgpikAMc3jP8Elxq9cYnJ6mo6dQ8xPjdO6dYBEaZFU/x6mx26z
      //Aw0aD6kcbmcQQH2H1omLZ4ir4OP88yy0QjEdLzM5z+/Eu6Bw/q4JcNwfModjMPcNu2k0h2
      89mpU8xdHWHJ9bFv3w5ujU9SqUImkyGdTlMul+s5s0jNeH4YLpeHHdu7oFLk2qUrJAfeIhXK
      09G3h4XJUTI5l2RbGwDpdLpuA4vUklOLjbB0Oq1PgwqZdJ5K+fUOp6ZwgGgsWOOJXs1xHKcm
      H4cWAfjzn66QeV54rdf++L0efvuHgRpP9L/pSlZMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhp
      CkBMUwBimgIQ0xSAmKYAxDQFIKZ5fBy6wuLTJyznXOLJFOSzOJE2gtUioeYYhdUs4VgbQb9T
      32lFasxzH8AtFLjz7Xmi2/fwbPYxpTKkAmvEeraSXQ5w9N2D9ZxTZF14nAL56NySgvg2BpJV
      kt27aFrLsFbKMnLuO7bv3k3I71AqlSiVSug2Y9KoPK8BlmcniW3tI9rSTvrRHQrRBM2BOL/+
      9CQ3R74iWyyTy+VYW1tTANKwPE+BIp39HPQ1EQ46HBsOvbgGqBQIRlvo+ulR/I5DU0sLoKV4
      aVyeAQTDzfx3RTnRsfn7r8IAhGLxdR5LpD70NqiYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKa905wfoW5J4ts3tLN88dzuIEoyWY/oVgr+WyGSGuS
      kJbipcF5BFDlxpXzVJsTFPJrXB2/z5Hht/nu3FnCW7awvBbm6HCyvpOKrAOPUyCXuek5Hk5N
      8mSlQlfcz/l/XyDvZvn6wg16d+0i5HdwXRfXdbUTLA3LI4AAm3s6aWtpZjm7TDjWRqDqUvbH
      +eiTk4x9fYalQolCoUA+n1cA0rA8ToF8DL37HovpFZLtCZYzzxnYu58QJYKRKFtO/ASf30eo
      KQZoKV4al+dFcCAUobMzAkAyteml54LR2PpOJVInehtUTFMAYpoCENMUgJimAMQ0BSCmKQAx
      TQGIaZ7/CJON5enZGaqVymu9NtbbRmx7W40n+v+gAIyY+Ms3VArl13rtG7/fvWED0CmQmKYA
      xDQFIKYpADFNAYhpngG4uSyTk1Pk3DJPH97nWWaVpecL5N0y6YV5imVtgUnj81yKv37lIoHW
      Du7dHuXe7DxuYZz2QJ7mri5WizGOvpOq76Qi68BzKf7RzCxTE+M8mHtE26ZeQmtZ1kpZLlwe
      442+PoJ+h2KxSLFY1E6wNCzPpfjurV3EmyP4w60sPhyjEE0SDcQ5+fFJbp0/QyZfwnVdBSAN
      zXMp/uC775HJrtGaaCO/vAShKIFqiUBTmJ6fvY8v6CMYjgLgum4dRxapHc+PQviDYdrbX9wZ
      Ptaa+P7R0IsXRZrXfTCRetDboGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY
      pgDENAUgpikAMU0BiGme+wAr6ac8mFugZ1svmcczFIJxNsUChFuTrKUXiCU7aQroTvHS2Dz+
      AlS58e1lKqEovtw8l289pDXWzM2LI1y7dpEbU4v49bdDNgDPALq6u5m5do4r97N0xx3+8bcz
      5IpZLn87wdZtbxDwORQKBQqFgnaCpWF5BpDPFQhHI1SKRcpOkFDAoRqMc/LjX3H74lnS+RLl
      cplSqaQApGF5XAP42blviO4dRWItMXKry/gORwhQwRdqoufnJ/AFfAT8L3aDi8ViHUcWqZ1X
      3Ck+TGvo+6X4ltaXn2wKr+tQIvWiS1kxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGI
      aQpATFMAYpoCENMUgJimAMQ0z32AqRsXGJ3NMvTWEHevXcJJ9pKqZmjftZuZ8Qn2vv0O0aD6
      kcbmcQRXuHfvLlUnRHl5lkpbH0tT48w+neavX5ymc9c+HfyyIXgcxQ7Dx3/D0V1R/nVpkipV
      cMCpwODgNiYmpqlUIZPJkE6nKZfL9Z1apEY8ToGqLM7eYfzBIsc/eJ/pm5eJ7HqTZDVDaud+
      nt25Tjrn0t7WBkA6na7jyCK143mn+G17DrFtz4vvth7/8KVnO4YOr/NYIvWhE3kxTQGIaQpA
      TFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmeS7FQ5Ur//yS
      zjePc/3cWeJb+0mUFkn172F67Db7Dw9rL1ganud9ghenbzE584iFhQWepLNEIxHS8w85/cVp
      ugcP6OCXDcHjKC4zOnqLtdUVni7D7z47xdzVEZZch317+7g1PqWleNkQPE6BAhz75afsnPiG
      UqKda5dGSA68RSqUo6NvL/OTo2RyLkktxUuDe8U1AHT3HwLgR8c/eOnx1IFD6zeRSB3pRF5M
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpr1yK
      v/T3z9l08EMmvzmLk9hGBxlS/Xt5MHqbA0eOaC9YGp7nfYLn749x/9EC1c77+DsGWJm6zqOI
      y8iNu3x06o86+GVD8FyKv33rLqsrWR49fka5XKLi+PDj4+CBAcZu3qGspXjZADyX4o/+4mN2
      3r1KddMgM9fO0bp7iER1icT2QZ7fG2dJS/GyAbxyKX7zziEAuo6deOnx1P6h9ZtIpI50Ii+m
      KQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJjmuQ+QX0nz
      5PkaPVs6eTY3ixuIkmwOEIrFyS9niMSThPxOPWcVqTmPACrMPrjPwwd3WVw5yJ3bkxw5fIjv
      zp0hvKWH5bUmjg4n6zupyDrwOAXysWNwAF/FR65Qoivu4/zIJfJulq/PX6e3v5+Q38F1XVzX
      pVqt1ndqkRrxXIqfuDlKoDnManaVcCxBoFqk7I/z0ScnGTv3FUuFEoVCgXw+rwCkYXmcAvnp
      7R+ktauXVCpJ9vkCA3v3E6JEMBKl+8Qx/H4foaYYoKV4aVyeF8GhSAubIy0AJDs6X3ouGG1Z
      36lE6kRvg4ppCkBMUwBimgIQ0xSAmKYAxLT/AGDF+Ys5JpODAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Daily' width='192'>
      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
      D3X3I8Vi6nkKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAJJUlEQVR4nO3dTWwcdxnH8e/M7G7Xa3vX9saxnbXdOG2IXdqqRVVbAqJqCQUVDm1PcAAh
      kDghwYkrV5CQuHFF3FA5VEUtbW9QKnpAfaGkeW2ct43t+G299r7Mend2OIS+WEo728S79uT5
      fS6rxH/Fz8HfzMx6/jtOGIYhIka5ez2AyF5SAGJaYq8HkJsrnj1JNTPMwvxFjs5M4bou9co6
      p4obPHL/fUyMj+71iHcEBbBP+dUmFy69jZcZ5OLpk1xcDpnIlllv5SkWryqAXeLoInh/qlcq
      1Fot7kp4lEslMtlh3HaDci1gJNfPwMDAXo94R7jtANSPxNltnwJVKhU8z9uNWUR67rYD8DyP
      TCazG7OI9JzeBhXTFICYpgDEtM+9BvjoHZ4bLyGO4xCGN16Bj19F4uozAwjDkNdee5XJsVE2
      /G38lWvU+g4ylEmxtnSFhx9/kpnJsV7OKrLrPvMUyHEc8vk8juuA4+I4Dp5743Uol2Nzcwvf
      92k2m72cV2RX3fYvwmq1GplMhjD86FSpM66uPmQf2LV7gd5/H86d62xtoQDHj+/Wdxa5dfp/
      WExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTYv+5QG9dfYH50tsdrb135DEe
      m3y+yxNJnMQ+gHcW/8Y/Lv+po7UnjvxMAcRJcxNW3+x8/djT4H6xH+nYByB3sOolePO7na9/
      rrL7AZw9+R+qbZf6ahE3O04q4dGslRmbOsrM1PgX+mYi+03kRbDneVxfWsAJmsxfW6PpV1m4
      dpWgjXaESexFHgEKU1PkCzM061t8JTtI1Q+4/4EHIQxJp9O02+1ezClx1ViFM7/tfP2Xfw2J
      2//c02oVPvwwel1kAH0DOfoAsv0ApPtuczKxZbsE537X+frZX+1KAL7f2Q7FfXERXCzC2lpn
      a4eHYXq6u/OIHfsigOVluHChs7XT03YDCENoBJ2vT3ng6qObPte+CEA602rDj17sfP1vTsCR
      4e7NcyfQrRBimgIQ0xSAmKZrgD1wbg02G52tLQzCxGB357FMAeyBP5+Ek8udrf3+/fD8XHfn
      sUynQGKaAhDTdApkRKN149SrU8/OQi7dvXn2CwVgRLMNr5zvfP2JIwpAPscf3/0Fp1ff6Gjt
      UzM/5Tv3/rzLE8mtUAC36Hp1nksb73W0tlRf7PI0cqsiA1i4cpFyo812eYX+/BitICTlBCTT
      WaYK8X5GWKNVpdXubENP0ruLlGf0XvCgDkuvd75+7GlIxOPh6ZEBrKwsU6rV6Q983rtSZq6Q
      4/zp93niez+I/Y6wP/z7J7xVfKGjtc8c/SU/fuj3XZ5on9peh3891/n6Zy5B4u6ujbOboneE
      TU4y2IDm1hrfnj1IfTtg6u4ZaFVJp8e1I0xiLTKAA2MFDgBQ6PowIr2mX4SJaQpATFMAYpoC
      ENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMS06A0xS0VK1RYpWgyNDFNttEkn
      XXBc8iP66GGJt8gjwMhwjmbT5/rls/z1729TvPwhr770FxqkCIJAG2Ik1iIDqJTKTM3ci5ce
      4OHZu8kMjvDo15+kVlohCALCMOzFnCJdEXkKlBufBOCR40/c9OutVmt3JxLpIV0Ei2kKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDEtMjboSsba6zXWrSqZYby
      I1T9gHTKxXE8DuRHejGjSNdEBnD61ClI99HeWOaf/00wV8hy7oP3eOrZH9JqtbQjTGKtg2eE
      FVjZbNDqG+CRwjhhCI9945vUN1YJBw9pR5jEWmQAh6aPcAiAuZt+Pc5PiRTRRbCYpgDENAUg
      pikAMU0BiGkKQExTAGKaAhDTdgSwcW2el15+iYsL5b2aR6SnPhVAyPLyCqlUmmRCBwax4VO3
      QjgcODDKkg/9fcm9m0ikh3b8V+8mXJYXFqhv6/4esWFHAMl0hnw2Rc0P9moekZ7aEUBja4Mw
      lcHZq2lEeuxT1wAh28l+DuayjOYHP/7b9ZVFqk2X7UqJ3EieWiMgnXRw3ASjB/J7MLLI7tlx
      BFhcWGB4qI/ry5+8DVpaL7G+ushacZ5X3niXpeIlXn/5RZpummazSRDodEnia8e7QLOzx1gr
      17hn4pO9vgODA9TbdRL9WR6dHKcdhhx/4gR+eRUnW9iDkUV2z44dYX39WSb7szsWjB2aZuwQ
      wLGb/gOe53VrNpGu02+8xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhp
      CkBMUwBiWuQDMghD6r5Pw/fJZPrwm+0bH5sShvT19fVgRJHuiQxgfbnIO6fmSfnrLAZZpvIZ
      rlw4w9e+9RxTCkBiLjKARjPAdVwcL8nEcA4v4XHPl2bZLK3h59J6RJLEWmQAE5OHmZg8/Jlf
      11MiJc50ESymKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMU
      gJgWuR/g+tULnLmyQrCxQGtgjP67kmytL3HsgUeZmRrvxYwiXRN5BPCSadqtBk4YUqlv0w5a
      hO2Aat3H933tCJNYizwCDOVHOf7Vg4RBi2QqSSsIcV0HQkgmE9oRJrEWGUAimfr/oiQAeiae
      3El0ESymKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMib4de
      Kl7m/JVrbK8v0uwfYyCdpLy6yNxDj3NEO8Ik5iKPAH5tk/7B3I2nRW43abcDEp5DtVbXjjCJ
      vcgjQOHwMSYA59hREp5HEIa4jgOA53naESaxFhlAMpXa8WddNMidRD/PYpoCENMUgJimAMQ0
      BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxLfJ26K3SChcX16mvXiU5NI7rurBd
      YWh0msPaESYxF3kEyAwOUd1cJmw2+ODCIo1qmXNnzxC6nnaESexFHgFcz2Nu7kEq5Q0eGB5i
      yw84NnsfhCHpdFo7wiTWIgNwHJehXI6hXA6A/sGuzyTSM7oIFtMUgJimAMQ0BSCmKQAxTQGI
      aQpATFMAYpoCENMUgJimAMQ0BSCm/Q9G54zf9HjpVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Day of Week' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hour of a Day' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top 20 Agency' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
